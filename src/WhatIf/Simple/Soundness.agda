module Simple.Soundness where

open import Data.String using (String; _‚âü_)
open import Data.List using (List; []; _‚à∑_; [_]; _++_; length; lookup; foldr)
open import Data.List.NonEmpty using (List‚Å∫; _‚à∑_; _‚à∑‚Å∫_; head; tail)
open import Data.List.Relation.Binary.Pointwise using (Pointwise; [] ; _‚à∑_; ++‚Å∫)
open import Data.Bool using (Bool; true; false)
open import Data.Fin using (Fin; zero; suc; from‚Ñï<; inject‚â§)
open import Data.Nat using (‚Ñï; zero; suc; _+_; _<_)
open import Data.Nat.Properties using () renaming (‚â§-trans to ‚â§‚Ñï-trans)
open import Data.Maybe using (Maybe; nothing; just)
open import Data.Product using (_√ó_; _,_ ; -,_; proj‚ÇÅ ; proj‚ÇÇ; ‚àÉ-syntax; Œ£)
open import Data.Sum using (_‚äé_; inj‚ÇÅ; inj‚ÇÇ)
open import Function using (case_of_)
open import Relation.Nullary.Decidable using (Dec; yes; no)
import Relation.Binary.PropositionalEquality as Eq
open Eq using (_‚â°_; refl; sym; trans; cong)

open import Qualifiers
open import Auxiliary
open import Simple.StackBasedBigStep
-- open import Simple.Extends


--

‚ä®-extend : Œ£‚Çï‚Çõ ‚âº‚Çï‚Çõ Œ£‚Çï‚Çõ‚Ä≤ ‚Üí ùì¢ ‚âº‚Çõ ùì¢‚Ä≤ ‚Üí ‚ü® Œ£‚Çï‚Çõ , Œì ‚ü©‚ä® ùìî / ùì¢ ‚Üí ‚ü® Œ£‚Çï‚Çõ‚Ä≤ , Œì ‚ü©‚ä® ùìî / ùì¢‚Ä≤
‚ä¢·µ•-extend : Œ£‚Çï‚Çõ ‚âº‚Çï‚Çõ Œ£‚Çï‚Çõ‚Ä≤ ‚Üí ùì¢ ‚âº‚Çõ ùì¢‚Ä≤ ‚Üí ‚ü® Œ£‚Çï‚Çõ ‚ü©‚ä¢[ v ‚¶Ç S ] ‚Üí ‚ü® Œ£‚Çï‚Çõ‚Ä≤ ‚ü©‚ä¢[ v ‚¶Ç S ]

‚ä®-extend {ùì¢ = ùì¢}{ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚âºŒ£ ‚âºùì¢ ‚ä®ùìî = mk-‚ä® (Œª x ‚Üí let v , acc , ‚ä¢v = ‚ä®-heap ‚ä®ùìî x in v , acc , ‚ä¢·µ•-extend {ùì¢ = ùì¢}{ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚âºŒ£ ‚âºùì¢ ‚ä¢v)
                         (Œª x ‚Üí let a , sacc , v , jv‚â° , ‚ä¢v = ‚ä®-stack ‚ä®ùìî x in a , sacc , v , ‚Üì·µ•-mono{ùì¢ = ùì¢}{ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚âºùì¢ jv‚â° , ‚ä¢·µ•-extend {ùì¢ = ùì¢}{ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚âºŒ£ ‚âºùì¢ ‚ä¢v)
‚ä¢·µ•-extend ‚âºŒ£ ‚âºùì¢ TVUnit = TVUnit
‚ä¢·µ•-extend ‚âºŒ£ ‚âºùì¢ TVCst = TVCst
‚ä¢·µ•-extend ‚âºŒ£ ‚âºùì¢ (TVClos {ùì¢‚Ä≤ = ùì¢·∂ú} {q = ùüô} ‚ä®ùìî ùì¢‚âº refl qbd ‚ä¢e wf‚ÇÅ wf‚ÇÇ <‚¶ÇS)
  = TVClos {ùì¢‚Ä≤ = ùì¢·∂ú} (‚ä®-extend ‚âºŒ£ (‚âº‚Çõ-refl {ùì¢·∂ú}) ‚ä®ùìî) ùì¢‚âº refl qbd ‚ä¢e wf‚ÇÅ wf‚ÇÇ <‚¶ÇS
‚ä¢·µ•-extend ‚âºŒ£ ‚âºùì¢ (TVClos {ùì¢‚Ä≤ = ùì¢·∂ú} {q = ùüö} ‚ä®ùìî ùì¢‚âº ùì¢‚â° qbd ‚ä¢e wf‚ÇÅ wf‚ÇÇ <‚¶ÇS)
  = TVClos {ùì¢‚Ä≤ = ùì¢·∂ú} (‚ä®-extend ‚âºŒ£ (‚âº‚Çõ-refl {ùì¢·∂ú}) ‚ä®ùìî) ùì¢‚âº ùì¢‚â° qbd ‚ä¢e wf‚ÇÅ wf‚ÇÇ <‚¶ÇS
‚ä¢·µ•-extend {Œ£‚Çï‚Çõ = Œ£‚Çï‚Çõ} ‚âºŒ£ ‚âºùì¢ (TVRef {q = q} ‚Ñì< lkup‚â° <‚¶ÇS)
  with ‚âºŒ£ q in eq
... | qts , eq1 = TVRef (‚â§‚Ñï-trans ‚Ñì< (‚âº‚Çï‚Çõ‚áílength ‚âºŒ£ q)) (trans (lookup-from-i‚Ä≤ (Œ£‚Çï‚Çõ q) ‚Ñì< eq1) lkup‚â°) <‚¶ÇS

-- properties

postulate
  eval-preservation :
    Œì ‚ä¢ e ‚¶Ç S
    ‚Üí ‚ü® Œ£‚Çï‚Çõ , Œì ‚ü©‚ä® ùìî / ùì¢
    ‚Üí ùìî , ùìó , ùì¢ ‚ä¢ e ‚áì[ q ] v ‚ä£ ùìó‚Ä≤ , ùì¢‚Ä≤
    ‚Üí ‚ü® Œ£‚Çï‚Çõ , Œì ‚ü©‚ä® ùìî / ùì¢‚Ä≤


variable
  HSs SSs : List QType
  

record Soundness (Œ£‚Çï‚Çõ : HSType) (v : Val) (S : QType) (ùìó‚Ä≤ : Heap) (ùì¢ ùì¢‚Ä≤ : Stack) : Set where
  field
    sound-Œ£‚Çï‚Çõ‚Ä≤ : HSType
    sound-Œ£‚âº   : Œ£‚Çï‚Çõ ‚âº‚Çï‚Çõ Œ£‚Çï‚Çõ‚Ä≤
    sound-‚ä¢v   : ‚ü® Œ£‚Çï‚Çõ‚Ä≤ ‚ü©‚ä¢[ v ‚¶Ç S ]
    sound-‚ä¢ùìó  : Œ£‚Çï‚Çõ‚Ä≤ ‚ä¢‚Çï ùìó‚Ä≤
    sound-‚ä¢ùì¢   : Œ£‚Çï‚Çõ‚Ä≤ ‚ä¢‚Çõ ùì¢‚Ä≤
    sound-ùì¢‚âº   : ùì¢ ‚âº‚Çõ ùì¢‚Ä≤


eval-soundness :
  Œ£‚Çï‚Çõ ‚ä¢‚Çï ùìó
  ‚Üí Œ£‚Çï‚Çõ ‚ä¢‚Çõ ùì¢
  ‚Üí Œì ‚ä¢ e ‚¶Ç S
  ‚Üí ‚ü® Œ£‚Çï‚Çõ , Œì ‚ü©‚ä® ùìî / ùì¢
  ‚Üí q-of S ‚â§ q
  ‚Üí ùìî , ùìó , ùì¢ ‚ä¢ e ‚áì[ q ] v ‚ä£ ùìó‚Ä≤ , ùì¢‚Ä≤
  ‚Üí ‚àÉ[ Œ£‚Çï‚Çõ‚Ä≤ ] Œ£‚Çï‚Çõ ‚âº‚Çï‚Çõ Œ£‚Çï‚Çõ‚Ä≤ √ó ‚ü® Œ£‚Çï‚Çõ‚Ä≤ ‚ü©‚ä¢[ v ‚¶Ç S ] √ó Œ£‚Çï‚Çõ‚Ä≤ ‚ä¢‚Çï ùìó‚Ä≤ √ó Œ£‚Çï‚Çõ‚Ä≤ ‚ä¢‚Çõ ùì¢‚Ä≤ √ó ùì¢ ‚âº‚Çõ ùì¢‚Ä≤
-- ‚Üí Soundness Œ£‚Çï‚Çõ v S ùìó‚Ä≤ ùì¢ ùì¢‚Ä≤ 

----- subtyping

eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TSub ‚ä¢e S<‚¶Ç) ‚ä®ùìî ‚â§-q ‚áì
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî (‚â§-trans (q-of-mono S<‚¶Ç) ‚â§-q) ‚áì
... | _ , Œ£‚âº , ‚ä¢v , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤
  = -, Œ£‚âº , <‚¶Ç-val-lift ‚ä¢v S<‚¶Ç , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤
eval-soundness {ùì¢ = ùì¢} ‚ä¢ùìó ‚ä¢ùì¢ TUnit ‚ä®ùìî ‚â§-q EUnit = -, ‚âº‚Çï‚Çõ-refl , TVUnit , ‚ä¢ùìó , ‚ä¢ùì¢ , ‚âº‚Çõ-refl{ùì¢}

----- variables

eval-soundness {ùì¢ = ùì¢} ‚ä¢ùìó ‚ä¢ùì¢ (TVar x) ‚ä®ùìî ‚â§-refl (EVarH acc)
  = -, ‚âº‚Çï‚Çõ-refl , access-soundness ‚ä®ùìî x acc , ‚ä¢ùìó , ‚ä¢ùì¢ , ‚âº‚Çõ-refl{ùì¢}
eval-soundness {ùì¢ = ùì¢} {S = mkQ ùüô T} ‚ä¢ùìó ‚ä¢ùì¢ (TVar {x = X s ùüö} x‚àà) ‚ä®ùìî ‚â§-q (EVarS (on-stack sacc) dec‚â°)
  = -, ‚âº‚Çï‚Çõ-refl , genaccess-soundness-ùüö ‚ä®ùìî x‚àà (on-stack sacc) _ dec‚â° , ‚ä¢ùìó , ‚ä¢ùì¢ , ‚âº‚Çõ-refl{ùì¢}
eval-soundness {ùì¢ = ùì¢} {S = mkQ ùüö T} ‚ä¢ùìó ‚ä¢ùì¢ (TVar {x = X s ùüô} x‚àà) ‚ä®ùìî ‚â§-q (EVarS (on-heap hacc) refl)
  = -, ‚âº‚Çï‚Çõ-refl , genaccess-soundness ‚ä®ùìî x‚àà (on-heap hacc) , ‚ä¢ùìó , ‚ä¢ùì¢ , ‚âº‚Çõ-refl{ùì¢}

----- abstraction

eval-soundness {ùì¢ = ùì¢} {q = ùüô} ‚ä¢ùìó ‚ä¢ùì¢ (TAbs ‚ä¢e qbdd {wf‚ÇÅ} {wf‚ÇÇ}) ‚ä®ùìî ‚â§-refl (EAbs {q‚ÇÅ = ùüô} ‚â§-refl ‚â§-refl refl)
  = -, ‚âº‚Çï‚Çõ-refl , TVClos (restrict‚Ä≤ ‚ä®ùìî qbdd) (‚âº‚Çõ-refl {mkS [] []}) refl (is-bounded qbdd) ‚ä¢e wf‚ÇÅ wf‚ÇÇ <‚¶Ç-refl , ‚ä¢ùìó , ‚ä¢ùì¢ , ‚âº‚Çõ-refl{ùì¢}
eval-soundness {ùì¢ = ùì¢} {q = ùüö} ‚ä¢ùìó ‚ä¢ùì¢ (TAbs ‚ä¢e qbdd {wf‚ÇÅ} {wf‚ÇÇ}) ‚ä®ùìî ‚â§-refl (EAbs {q‚ÇÅ = ùüö} ‚â§-refl ‚â§-top refl)
  = -, ‚âº‚Çï‚Çõ-refl , TVClos (restrict‚Ä≤ ‚ä®ùìî qbdd) (‚âº‚Çõ-refl {ùì¢}) refl (is-bounded qbdd) ‚ä¢e wf‚ÇÅ wf‚ÇÇ <‚¶Ç-refl , ‚ä¢ùìó , ‚ä¢ùì¢ , ‚âº‚Çõ-refl{ùì¢}

----- application

eval-soundness {q = ùüô} ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-refl (EApp {ùì¢ = ùì¢}{q = ùüô} {q‚ÇÅ = ùüô}{ùì¢‚Ä≤ = ùì¢‚Ä≤}{ùì¢‚Ä≥ = ùì¢‚Ä≥} ‚â§-refl ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {q = ùüô} {x = X s _} ‚ä®ùìî‚Ä≤ ùì¢‚âº refl qbd ‚ä¢e‚ÇÄ wf‚ÇÅ ‚â§-refl (SQual qsub (SFun{S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüô)} S‚ÇÅ<‚¶ÇS‚ÇÇ S‚ÇÉ<‚¶ÇS‚ÇÑ)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (‚ä®-extend ‚âºŒ£‚Ä≤ ùì¢‚âºùì¢‚Ä≤ ‚ä®ùìî) (‚â§-trans (q-of-mono S‚ÇÅ<‚¶ÇS‚ÇÇ) wf‚ÇÅ) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥ , ùì¢‚Ä≤‚âºùì¢‚Ä≥
  using ‚ä®ùìî‚Ä≥ ‚Üê ‚ä®-extend-ùüô s T‚ÇÅ (‚ä¢·µ•-adjust (<‚¶Ç-val-lift ‚ä¢varg S‚ÇÅ<‚¶ÇS‚ÇÇ)) (‚ä®-adjust {Œ£‚Çõ = []} (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≥ ‚ä®ùìî‚Ä≤) (ùüô-bound‚áí‚àÄùüö‚àâ qbd))
  with eval-soundness (‚ä¢‚Çï-adjust [] [] ‚ä¢ùìó‚Ä≥) [] ‚ä¢e‚ÇÄ ‚ä®ùìî‚Ä≥ (‚â§-trans (q-of-mono S‚ÇÉ<‚¶ÇS‚ÇÑ) ‚â§-refl) ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥ , ‚âºùì¢‚Ä¥
  using ‚âºŒ£‚ÇÅ‚ÇÇ ‚Üê ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ ‚âºŒ£‚Ä≥
  = adjust-stack Œ£‚Çï‚Çõ‚Ä¥ (Œ£‚Çï‚Çõ‚Ä≥ ùüö)
  , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚ÇÅ‚ÇÇ (‚âº‚Çï‚Çõ-adjust-[] ‚âºŒ£‚Ä¥)
  , ‚ä¢·µ•-adjust (<‚¶Ç-val-lift ‚ä¢vres S‚ÇÉ<‚¶ÇS‚ÇÑ)
  , ‚ä¢‚Çï-adjust (Œ£‚Çï‚Çõ‚Ä≥ ùüö) (‚ä¢‚Çõ-adjust-[] {ùì¢ = ùì¢‚Ä≥} ‚âºŒ£‚Ä¥ ‚ä¢ùì¢‚Ä≥) ‚ä¢ùìó‚Ä¥
  , ‚ä¢‚Çõ-adjust-[] {ùì¢ = ùì¢‚Ä≥} ‚âºŒ£‚Ä¥ ‚ä¢ùì¢‚Ä≥
  , ‚âº‚Çõ-trans{ùì¢‚ÇÅ = ùì¢}{ùì¢‚ÇÇ = ùì¢‚Ä≤}{ùì¢‚ÇÉ = ùì¢‚Ä≥} ùì¢‚âºùì¢‚Ä≤ ùì¢‚Ä≤‚âºùì¢‚Ä≥

eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EApp {q = ùüô}{q‚ÇÅ = ùüö} q2< ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {S‚ÇÅ‚â§x = ()} ‚ä®ùìî‚ÇÅ ùì¢‚âº ùì¢‚â° qbd ‚ä¢e‚ÇÇ ‚â§-refl ‚â§-refl (SQual qsub (SFun S‚ÇÅ<‚¶ÇS‚ÇÇ S‚ÇÉ<‚¶ÇS‚ÇÑ)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤

eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EApp {q‚ÇÄ = ùüô}{ùì¢ = ùì¢}{q = ùüö}{q‚ÇÅ = ùüô}{ùì¢‚Ä≤ = ùì¢‚Ä≤}{ùì¢‚Ä≥ = ùì¢‚Ä≥}{ùì¢‚Ä¥ = ùì¢‚Ä¥} ‚â§-refl ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {x = X s _} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚ÇÅ ùì¢‚âº ùì¢‚â° qbd ‚ä¢e‚ÇÇ wf‚ÇÅ wf‚ÇÇ (SQual qsub (SFun{S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüô)} S‚ÇÅ<‚¶ÇS‚ÇÇ S‚ÇÉ<‚¶ÇS‚ÇÑ)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (‚ä®-extend ‚âºŒ£‚Ä≤ ùì¢‚âºùì¢‚Ä≤ ‚ä®ùìî) (q-of-mono S‚ÇÅ<‚¶ÇS‚ÇÇ) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥ , ùì¢‚Ä≤‚âºùì¢‚Ä≥
  using ‚ä®ùìî‚Ä≥ ‚Üê ‚ä®-extend ‚âºŒ£‚Ä≥
  with eval-soundness ‚ä¢ùìó‚Ä≥ ‚ä¢ùì¢‚Ä≥ ‚ä¢e‚ÇÇ {! ‚ä®ùìî‚ÇÅ!} (‚â§-trans (q-of-mono S‚ÇÉ<‚¶ÇS‚ÇÑ) ‚â§-q) ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥ , ‚âºùì¢‚Ä¥
  = Œ£‚Çï‚Çõ‚Ä¥ , (‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ (‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≥ ‚âºŒ£‚Ä¥)) , <‚¶Ç-val-lift ‚ä¢vres S‚ÇÉ<‚¶ÇS‚ÇÑ , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥ , (‚âº‚Çõ-trans{ùì¢‚ÇÅ = ùì¢}{ùì¢‚ÇÇ = ùì¢‚Ä≤}{ùì¢‚ÇÉ = ùì¢‚Ä¥} ùì¢‚âºùì¢‚Ä≤ (‚âº‚Çõ-trans{ùì¢‚ÇÅ = ùì¢‚Ä≤}{ùì¢‚ÇÇ = ùì¢‚Ä≥}{ùì¢‚ÇÉ = ùì¢‚Ä¥} ùì¢‚Ä≤‚âºùì¢‚Ä≥ ‚âºùì¢‚Ä¥))

eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EApp {q‚ÇÄ = ùüö}{q = ùüö}{q‚ÇÅ = ùüô} q2< ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {x = X s _} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚ÇÅ ùì¢‚âº ùì¢‚â° qbd ‚ä¢e‚ÇÇ wf‚ÇÅ wf‚ÇÇ (SQual qsub (SFun{S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüô)} S‚ÇÅ<‚¶ÇS‚ÇÇ S‚ÇÉ<‚¶ÇS‚ÇÑ)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (‚ä®-extend ‚âºŒ£‚Ä≤ ùì¢‚âºùì¢‚Ä≤ ‚ä®ùìî) (q-of-mono S‚ÇÅ<‚¶ÇS‚ÇÇ) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥ , ùì¢‚Ä≤‚âºùì¢‚Ä≥
  with eval-soundness ‚ä¢ùìó‚Ä≥ ‚ä¢ùì¢‚Ä≥ ‚ä¢e‚ÇÇ {!‚ä®ùìî‚ÇÅ!} {!!} ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥ , ‚âºùì¢‚Ä¥
  = {!!}

eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EApp {q = ùüö}{q‚ÇÅ = ùüö} q2< ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚ÇÅ ùì¢‚âº ùì¢‚â° qbd ‚ä¢e‚ÇÇ wf‚ÇÅ wf‚ÇÇ (SQual qsub (SFun S‚ÇÅ<‚¶ÇS‚ÇÇ S‚ÇÉ<‚¶ÇS‚ÇÑ)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ , ùì¢‚âºùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (‚ä®-extend ‚âºŒ£‚Ä≤ ùì¢‚âºùì¢‚Ä≤ ‚ä®ùìî) (q-of-mono S‚ÇÅ<‚¶ÇS‚ÇÇ) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥ , ùì¢‚Ä≤‚âºùì¢‚Ä≥
  with eval-soundness ‚ä¢ùìó‚Ä≥ ‚ä¢ùì¢‚Ä≥ ‚ä¢e‚ÇÇ {!‚ä®ùìî‚ÇÅ!} {!!} ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥ , ‚âºùì¢‚Ä¥
  = {!!}

{-
-- varying q and q‚ÇÇ (as in X s q‚ÇÇ)

eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EApp q2< ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ ùì¢‚â°)
  with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì

-- q = ùüô, ùüô ‚Üí ùüô <‚¶Ç ùüô ‚Üí ùüô
eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-refl (EApp {ùì¢‚Ä≥ = ùì¢‚Ä≥} ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {q = ùüô} {x = X s q‚ÇÅ‚Ä≤} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚Ä≤ ùì¢‚â° qbd ‚ä¢e‚ÇÇ ‚â§-refl ‚â§-refl (SQual q1<=q2 (SFun {S‚ÇÉ = S‚ÇÉ@ (T‚ÇÉ ^ ùüô)}{S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüô)}{S‚ÇÇ = S‚ÇÇ}{S‚ÇÑ = S‚ÇÑ} <‚¶ÇSarg <‚¶ÇSres)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) (q-of-mono <‚¶ÇSarg) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
  using foo ‚Üê ‚ä®-extend-ùüô s T‚ÇÅ (‚ä¢·µ•-adjust (<‚¶Ç-val-lift ‚ä¢varg <‚¶ÇSarg)) (‚ä®-adjust {Œ£‚Çõ = []} (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≥ ‚ä®ùìî‚Ä≤) (ùüô-bound‚áí‚àÄùüö‚àâ qbd))
  with eval-soundness (‚ä¢‚Çï-adjust [] [] ‚ä¢ùìó‚Ä≥) [] ‚ä¢e‚ÇÇ foo (q-of-mono <‚¶ÇSres) ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥
  using ‚âºŒ£‚ÇÅ‚ÇÇ ‚Üê ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ ‚âºŒ£‚Ä≥
  = adjust-stack Œ£‚Çï‚Çõ‚Ä¥ (Œ£‚Çï‚Çõ‚Ä≥ ùüö)
  , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚ÇÅ‚ÇÇ (‚âº-adjust-[] ‚âºŒ£‚Ä¥)
  , ‚ä¢·µ•-adjust (<‚¶Ç-val-lift ‚ä¢vres <‚¶ÇSres)
  , ‚ä¢‚Çï-adjust (Œ£‚Çï‚Çõ‚Ä≥ ùüö) (‚ä¢‚Çõ-adjust-[] {ùì¢ = ùì¢‚Ä≥} ‚âºŒ£‚Ä¥ ‚ä¢ùì¢‚Ä≥) ‚ä¢ùìó‚Ä¥
  , ‚ä¢‚Çõ-adjust-[] {ùì¢ = ùì¢‚Ä≥} ‚âºŒ£‚Ä¥ ‚ä¢ùì¢‚Ä≥

-- q = ùüô, ùüö ‚Üí ùüô <‚¶Ç ùüô ‚Üí ùüô
eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp {S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüö)}{S‚ÇÇ = S‚ÇÇ} ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-refl (EApp {ùì¢‚Ä≥ = ùì¢‚Ä≥} ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {q = ùüô} {x = X s q‚ÇÅ‚Ä≤} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚Ä≤ ùì¢‚â° qbd ‚ä¢e‚ÇÇ ‚â§-refl ‚â§-refl (SQual ‚â§-bottop (SFun{S‚ÇÉ = S‚ÇÉ@ (T‚ÇÉ ^ ùüö)}{S‚ÇÅ = S‚ÇÅ‚Ä≤@ (T‚ÇÅ‚Ä≤ ^ ùüô)}{S‚ÇÑ = S‚ÇÑ} <‚¶ÇSarg <‚¶ÇSres)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) (q-of-mono <‚¶ÇSarg) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
  using foo ‚Üê ‚ä®-extend-ùüô s T‚ÇÅ‚Ä≤ (‚ä¢·µ•-adjust (<‚¶Ç-val-lift ‚ä¢varg <‚¶ÇSarg)) (‚ä®-adjust {Œ£‚Çõ = []} (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≥ ‚ä®ùìî‚Ä≤) (ùüô-bound‚áí‚àÄùüö‚àâ qbd))
  with eval-soundness (‚ä¢‚Çï-adjust [] [] ‚ä¢ùìó‚Ä≥) [] ‚ä¢e‚ÇÇ foo (q-of-mono <‚¶ÇSres) ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥
  using ‚âºŒ£‚ÇÅ‚ÇÇ ‚Üê ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ ‚âºŒ£‚Ä≥
  = adjust-stack Œ£‚Çï‚Çõ‚Ä¥ (Œ£‚Çï‚Çõ‚Ä≥ ùüö)
  , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚ÇÅ‚ÇÇ (‚âº-adjust-[] ‚âºŒ£‚Ä¥)
  , ‚ä¢·µ•-adjust (<‚¶Ç-val-lift ‚ä¢vres <‚¶ÇSres)
  , ‚ä¢‚Çï-adjust (Œ£‚Çï‚Çõ‚Ä≥ ùüö) (‚ä¢‚Çõ-adjust-[] {ùì¢ = ùì¢‚Ä≥} ‚âºŒ£‚Ä¥ ‚ä¢ùì¢‚Ä≥) ‚ä¢ùìó‚Ä¥
  , ‚ä¢‚Çõ-adjust-[] {ùì¢ = ùì¢‚Ä≥} ‚âºŒ£‚Ä¥ ‚ä¢ùì¢‚Ä≥

-- q = ùüö, ? ‚Üí ? <‚¶Ç ùüô ‚Üí ùüô
eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp {S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüô)} {S‚ÇÇ = S‚ÇÇ} ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-refl (EApp {ùì¢ = ùì¢}{ùì¢‚Ä≤ = ùì¢‚Ä≤}{ùì¢‚Ä≥ = ùì¢‚Ä≥} ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {ùì¢ = ùì¢‚ÇÅ} {q = ùüö} {x = X s q‚ÇÇ} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚Ä≤ ùì¢‚â° qbd ‚ä¢e‚ÇÇ wf‚ÇÅ wf‚ÇÇ (SQual ‚â§-refl (SFun{S‚ÇÉ = S‚ÇÉ}{S‚ÇÅ = S‚ÇÅ‚Ä≤@ (T‚ÇÅ‚Ä≤ ^ ùüô)}{S‚ÇÇ = _}{S‚ÇÑ = S‚ÇÑ@ (T‚ÇÑ ^ ùüô)} <‚¶ÇSarg <‚¶ÇSres)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) (q-of-mono <‚¶ÇSarg) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
  with eval-soundness ‚ä¢ùìó‚Ä≥ ‚ä¢ùì¢‚Ä≥ ‚ä¢e‚ÇÇ (‚ä®-extend-ùüô s T‚ÇÅ‚Ä≤ (<‚¶Ç-val-lift ‚ä¢varg <‚¶ÇSarg) (‚ä®-adjust-‚âº‚Çõ {!‚âº‚Çõ-trans{ùì¢‚ÇÅ}{ùì¢‚Ä≤}{ùì¢‚Ä≥}!} (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≥ ‚ä®ùìî‚Ä≤))) (q-of-mono <‚¶ÇSres) ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥
  = Œ£‚Çï‚Çõ‚Ä¥ , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ (‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≥ ‚âºŒ£‚Ä¥) , <‚¶Ç-val-lift ‚ä¢vres <‚¶ÇSres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥

-- q = ùüö, ? ‚Üí ? <‚¶Ç ùüö ‚Üí ùüô
eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp {S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüô)} {S‚ÇÇ = S‚ÇÇ} ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-refl (EApp {v‚ÇÇ = v‚ÇÇ} {ùì¢‚Ä≥ = ùì¢‚Ä≥} ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
  | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {q = ùüö} {x = X s q‚ÇÇ} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚Ä≤ ùì¢‚â° qbd ‚ä¢e‚ÇÇ wf‚ÇÅ wf‚ÇÇ (SQual ‚â§-refl (SFun{S‚ÇÉ = S‚ÇÉ}{S‚ÇÅ = S‚ÇÅ‚Ä≤@ (T‚ÇÅ‚Ä≤ ^ ùüö)}{S‚ÇÇ = _}{S‚ÇÑ = S‚ÇÑ@ (T‚ÇÑ ^ ùüô)} <‚¶ÇSarg <‚¶ÇSres)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
  with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) (q-of-mono <‚¶ÇSarg) ‚áì‚ÇÅ
... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢varg , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
  using ‚âº-ext ‚Üê ‚âº‚Çï‚Çõ-extend-Œ£ ùüö S‚ÇÅ‚Ä≤
  -- (‚ä®-extend-ùüô s T‚ÇÅ‚Ä≤ (<‚¶Ç-val-lift ‚ä¢varg <‚¶ÇSarg) (‚ä®-adjust-‚âº‚Çõ {!!} (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≥ ‚ä®ùìî‚Ä≤)))
  using ‚ä®ùìî-after-push ‚Üê ‚ä®-adjust-push-update s (<‚¶Ç-val-lift ‚ä¢varg <‚¶ÇSarg) (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≥ ‚ä®ùìî‚Ä≤)
  with eval-soundness (‚ä¢‚Çï-adjust _ (‚ä¢‚Çõ-adjust-push ‚ä¢varg ‚ä¢ùì¢‚Ä≥) ‚ä¢ùìó‚Ä≥) (‚ä¢‚Çõ-adjust-push ‚ä¢varg ‚ä¢ùì¢‚Ä≥) ‚ä¢e‚ÇÇ {!‚ä®ùìî-after-push!} (q-of-mono <‚¶ÇSres) {!!} -- ‚áì‚ÇÇ
... | Œ£‚Çï‚Çõ‚Ä¥ , ‚âºŒ£‚Ä¥ , ‚ä¢vres , ‚ä¢ùìó‚Ä¥ , ‚ä¢ùì¢‚Ä¥
  = {!!}

-- -- q = ùüö, ùüö ‚Üí ? ...
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp {S‚ÇÅ = S‚ÇÅ@ (T‚ÇÅ ^ ùüö)} {S‚ÇÇ = S‚ÇÇ} ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EAppH {ùì¢‚Ä≥ = ùì¢‚Ä≥} ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
--   | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos {q = ùüö} {x = X s q‚ÇÇ} {S‚ÇÅ‚â§x = refl} ‚ä®ùìî‚Ä≤ qbd ‚ä¢e‚ÇÇ œÉ?‚â° wf‚ÇÇ (SQual q1<=q2 (SFun <‚¶ÇSarg <‚¶ÇSres)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤ = {!!}

-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TApp ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (EAppS ‚áì ‚áì‚ÇÅ ‚áì‚ÇÇ refl)
--   = {!!}

-}

-------- EVERYTHING'S FINE FROM HERE ON 

-- ----- sequence

-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TSeq ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (ESeq ‚áì ‚áì‚ÇÅ)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-top ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVClos x x‚ÇÅ x‚ÇÇ x‚ÇÉ wf‚ÇÇ (SQual qsub ()) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVRef ‚Ñì< x (SQual qsub ()) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVUnit , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) ‚â§-q ‚áì‚ÇÅ
-- ... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢v , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
--   = Œ£‚Çï‚Çõ‚Ä≥ , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ ‚âºŒ£‚Ä≥ , ‚ä¢v , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥

-- ----- ref

-- -- Ref (T ^ ùüô) ^ ùüô / ERefH
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TRef {S = S@(T ^ ùüô)} {wf = ‚â§-refl} ‚ä¢e) ‚ä®ùìî ‚â§-refl (ERefH {ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚áì)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , ‚ä¢v , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   rewrite sym (‚ä¢‚Çï-length ‚ä¢ùìó‚Ä≤)
--   = extend-Œ£ Œ£‚Çï‚Çõ‚Ä≤ ùüô T , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ (‚âº‚Çï‚Çõ-extend-Œ£ ùüô T) , TVRef (length-< T (Œ£‚Çï‚Çõ‚Ä≤ ùüô) []) (lookup-last T (Œ£‚Çï‚Çõ‚Ä≤ ùüô)) <‚¶Ç-refl , ‚ä¢ùìó-extend-ùüô _ ‚ä¢v ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢-extend-ùüô {ùì¢ = ùì¢‚Ä≤} T ‚ä¢ùì¢‚Ä≤
-- -- Ref (T ^ ùüô) ^ ùüô / ERefS
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TRef {S = S@ (T ^ ùüô)} {q = ùüô} {wf = ‚â§-refl} ‚ä¢e) ‚ä®ùìî ‚â§-top (ERefS {q = q} {ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚áì q=1 q=2)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , ‚ä¢v , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with refl , refl , refl ‚Üê q=1 refl
--   rewrite sym (‚ä¢‚Çï-length ‚ä¢ùìó‚Ä≤)
--  = extend-Œ£ Œ£‚Çï‚Çõ‚Ä≤ ùüô T , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ (‚âº‚Çï‚Çõ-extend-Œ£ ùüô T) , TVRef (length-< T (Œ£‚Çï‚Çõ‚Ä≤ ùüô) []) (lookup-last T (Œ£‚Çï‚Çõ‚Ä≤ ùüô)) <‚¶Ç-refl , ‚ä¢ùìó-extend-ùüô _ ‚ä¢v ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢-extend-ùüô {ùì¢ = ùì¢‚Ä≤} T ‚ä¢ùì¢‚Ä≤
-- -- Ref (T ^ ùüö) ^ ùüö / ERefS
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TRef {S = S@(T ^ ùüö)} {q = ùüö} {wf = ‚â§-refl} ‚ä¢e) ‚ä®ùìî ‚â§-top (ERefS {q = q} {ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚áì q=1 q=2)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , ‚ä¢v , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with refl , refl ‚Üê q=2 refl
--   rewrite sym (‚ä¢‚Çõ-length {ùì¢ = ùì¢‚Ä≤} ‚ä¢ùì¢‚Ä≤)
--  = extend-Œ£ Œ£‚Çï‚Çõ‚Ä≤ ùüö S , ‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ (‚âº‚Çï‚Çõ-extend-Œ£ ùüö S) , TVRef (length-< S (Œ£‚Çï‚Çõ‚Ä≤ ùüö) []) (lookup-last S (Œ£‚Çï‚Çõ‚Ä≤ ùüö)) <‚¶Ç-refl , ‚ä¢ùìó-extend-ùüö S ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢-extend-ùüö {ùì¢ = ùì¢‚Ä≤} S ‚ä¢v ‚ä¢ùì¢‚Ä≤
-- -- Ref (T ^ ùüô) ^ ùüö / ERefS
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TRef {S = S@ (T ^ ùüô)} {q = ùüö} {wf = ‚â§-bottop} ‚ä¢e) ‚ä®ùìî ‚â§-refl (ERefS {ùì¢‚Ä≤ = ùì¢‚Ä≤} ‚áì q=1 q=2)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-bottop ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , ‚ä¢v , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with refl , refl ‚Üê q=2 refl
--   rewrite sym (‚ä¢‚Çõ-length {ùì¢ = ùì¢‚Ä≤} ‚ä¢ùì¢‚Ä≤)
--   = (extend-Œ£ Œ£‚Çï‚Çõ‚Ä≤ ùüö S) , (‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ (‚âº‚Çï‚Çõ-extend-Œ£ ùüö S)) , TVRef (length-< S (Œ£‚Çï‚Çõ‚Ä≤ ùüö) []) (lookup-last S (Œ£‚Çï‚Çõ‚Ä≤ ùüö)) <‚¶Ç-refl , (‚ä¢ùìó-extend-ùüö S ‚ä¢ùìó‚Ä≤) , (‚ä¢ùì¢-extend-ùüö {ùì¢ = ùì¢‚Ä≤} S ‚ä¢v ‚ä¢ùì¢‚Ä≤)


-- ----- deref

-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TDeref ‚ä¢e) ‚ä®ùìî ‚â§-refl (EDerefH ‚áì xread)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVRef ‚Ñì< lkup‚â° (SQual ‚â§-refl (SRef S<‚¶Ç <‚¶ÇS)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with refl ‚Üê <‚¶Ç-antisym S<‚¶Ç <‚¶ÇS
--   = Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , typed-read ‚ä¢ùìó‚Ä≤ ‚Ñì< lkup‚â° xread , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TDeref {q = ùüö} ‚ä¢e) ‚ä®ùìî ‚â§-q (EDerefS ‚áì q=1 q=2)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-refl ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVRef ‚Ñì< lkup‚â° (SQual ‚â§-bottop (SRef S<‚¶Ç <‚¶ÇS)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with xread ‚Üê q=1 refl
--   with refl ‚Üê <‚¶Ç-antisym  S<‚¶Ç <‚¶ÇS
--   = Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , typed-read ‚ä¢ùìó‚Ä≤ ‚Ñì< lkup‚â° xread , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVRef ‚Ñì< lkup‚â° (SQual ‚â§-refl (SRef S<‚¶Ç <‚¶ÇS)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with xsread ‚Üê q=2 refl
--   with refl ‚Üê <‚¶Ç-antisym  S<‚¶Ç <‚¶ÇS
--   = Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , typed-sread ‚ä¢ùì¢‚Ä≤ ‚Ñì< lkup‚â° xsread , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤

-- ----- setref

-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TSetref ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (ESetrefS {q = ùüô} ‚áì ‚áì‚ÇÅ q=1 q=2)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-top ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVRef ‚Ñì< lkup‚â° (SQual _ (SRef {wf‚ÇÅ = wf‚ÇÅ} <‚¶ÇS S<‚¶Ç)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with refl ‚Üê <‚¶Ç-antisym  S<‚¶Ç <‚¶ÇS
--   with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) wf‚ÇÅ ‚áì‚ÇÅ
-- ... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢v , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
--   with xwrite , refl ‚Üê q=1 refl
--   = Œ£‚Çï‚Çõ‚Ä≥ , (‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ ‚âºŒ£‚Ä≥) , TVUnit , typed-write ‚ä¢ùìó‚Ä≥ (‚â§‚Ñï-trans ‚Ñì< (‚âº‚Çï‚Çõ‚áílength ‚âºŒ£‚Ä≥ ùüô)) (trans (trans (cong (lookup (Œ£‚Çï‚Çõ‚Ä≥ ùüô)) (from‚Ñï-inject‚â§ (‚âº‚Çï‚Çõ‚áílength ‚âºŒ£‚Ä≥ ùüô) ‚Ñì<)) (sym (‚âº‚Çï‚Çõ-lookup ‚âºŒ£‚Ä≥ ùüô (from‚Ñï< ‚Ñì<)))) lkup‚â°) ‚ä¢v xwrite , ‚ä¢ùì¢‚Ä≥
-- eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ (TSetref ‚ä¢e ‚ä¢e‚ÇÅ) ‚ä®ùìî ‚â§-q (ESetrefS {q = ùüö} ‚áì ‚áì‚ÇÅ q=1 q=2)
--   with eval-soundness ‚ä¢ùìó ‚ä¢ùì¢ ‚ä¢e ‚ä®ùìî ‚â§-top ‚áì
-- ... | Œ£‚Çï‚Çõ‚Ä≤ , ‚âºŒ£‚Ä≤ , TVRef ‚Ñì< lkup‚â° (SQual _ (SRef {wf‚ÇÅ = wf‚ÇÅ} <‚¶ÇS S<‚¶Ç)) , ‚ä¢ùìó‚Ä≤ , ‚ä¢ùì¢‚Ä≤
--   with refl ‚Üê <‚¶Ç-antisym  S<‚¶Ç <‚¶ÇS
--   with eval-soundness ‚ä¢ùìó‚Ä≤ ‚ä¢ùì¢‚Ä≤ ‚ä¢e‚ÇÅ (eval-preservation ‚ä¢e (‚ä®-extend-Œ£ ‚âºŒ£‚Ä≤ ‚ä®ùìî) ‚áì) wf‚ÇÅ ‚áì‚ÇÅ
-- ... | Œ£‚Çï‚Çõ‚Ä≥ , ‚âºŒ£‚Ä≥ , ‚ä¢v , ‚ä¢ùìó‚Ä≥ , ‚ä¢ùì¢‚Ä≥
--   with refl , xswrite ‚Üê q=2 refl
--   = Œ£‚Çï‚Çõ‚Ä≥ , (‚âº‚Çï‚Çõ-trans ‚âºŒ£‚Ä≤ ‚âºŒ£‚Ä≥) , TVUnit , ‚ä¢ùìó‚Ä≥ , typed-swrite ‚ä¢ùì¢‚Ä≥ (‚â§‚Ñï-trans ‚Ñì< (‚âº‚Çï‚Çõ‚áílength ‚âºŒ£‚Ä≥ ùüö)) (trans (trans (cong (lookup (Œ£‚Çï‚Çõ‚Ä≥ ùüö)) (from‚Ñï-inject‚â§ (‚âº‚Çï‚Çõ‚áílength ‚âºŒ£‚Ä≥ ùüö) ‚Ñì<)) (sym (‚âº‚Çï‚Çõ-lookup ‚âºŒ£‚Ä≥ ùüö (from‚Ñï< ‚Ñì<)))) lkup‚â°) ‚ä¢v xswrite
